const IdentityRegistryABI = [ { "name": "addResolversFor", "type": "function", "inputs": [ { "name": "ein", "type": "uint256" }, { "name": "resolvers", "type": "address[]" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "getEIN", "type": "function", "inputs": [ { "name": "_address", "type": "address" } ], "outputs": [ { "name": "ein", "type": "uint256" } ], "payable": false, "constant": true, "stateMutability": "view" }, { "name": "removeProvidersFor", "type": "function", "inputs": [ { "name": "ein", "type": "uint256" }, { "name": "providers", "type": "address[]" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "recoveryTimeout", "type": "function", "inputs": [], "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "constant": true, "stateMutability": "view" }, { "name": "createIdentityDelegated", "type": "function", "inputs": [ { "name": "recoveryAddress", "type": "address" }, { "name": "associatedAddress", "type": "address" }, { "name": "providers", "type": "address[]" }, { "name": "resolvers", "type": "address[]" }, { "name": "v", "type": "uint8" }, { "name": "r", "type": "bytes32" }, { "name": "s", "type": "bytes32" }, { "name": "timestamp", "type": "uint256" } ], "outputs": [ { "name": "ein", "type": "uint256" } ], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "triggerRecoveryAddressChange", "type": "function", "inputs": [ { "name": "newRecoveryAddress", "type": "address" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "removeProviders", "type": "function", "inputs": [ { "name": "providers", "type": "address[]" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "hasIdentity", "type": "function", "inputs": [ { "name": "_address", "type": "address" } ], "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "constant": true, "stateMutability": "view" }, { "name": "triggerRecoveryAddressChangeFor", "type": "function", "inputs": [ { "name": "ein", "type": "uint256" }, { "name": "newRecoveryAddress", "type": "address" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "createIdentity", "type": "function", "inputs": [ { "name": "recoveryAddress", "type": "address" }, { "name": "providers", "type": "address[]" }, { "name": "resolvers", "type": "address[]" } ], "outputs": [ { "name": "ein", "type": "uint256" } ], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "addAssociatedAddress", "type": "function", "inputs": [ { "name": "approvingAddress", "type": "address" }, { "name": "addressToAdd", "type": "address" }, { "name": "v", "type": "uint8" }, { "name": "r", "type": "bytes32" }, { "name": "s", "type": "bytes32" }, { "name": "timestamp", "type": "uint256" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "removeAssociatedAddress", "type": "function", "inputs": [], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "isProviderFor", "type": "function", "inputs": [ { "name": "ein", "type": "uint256" }, { "name": "provider", "type": "address" } ], "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "constant": true, "stateMutability": "view" }, { "name": "signatureTimeout", "type": "function", "inputs": [], "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "constant": true, "stateMutability": "view" }, { "name": "removeResolversFor", "type": "function", "inputs": [ { "name": "ein", "type": "uint256" }, { "name": "resolvers", "type": "address[]" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "identityExists", "type": "function", "inputs": [ { "name": "ein", "type": "uint256" } ], "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "constant": true, "stateMutability": "view" }, { "name": "addProviders", "type": "function", "inputs": [ { "name": "providers", "type": "address[]" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "getIdentity", "type": "function", "inputs": [ { "name": "ein", "type": "uint256" } ], "outputs": [ { "name": "recoveryAddress", "type": "address" }, { "name": "associatedAddresses", "type": "address[]" }, { "name": "providers", "type": "address[]" }, { "name": "resolvers", "type": "address[]" } ], "payable": false, "constant": true, "stateMutability": "view" }, { "name": "isSigned", "type": "function", "inputs": [ { "name": "_address", "type": "address" }, { "name": "messageHash", "type": "bytes32" }, { "name": "v", "type": "uint8" }, { "name": "r", "type": "bytes32" }, { "name": "s", "type": "bytes32" } ], "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "constant": true, "stateMutability": "pure" }, { "name": "triggerRecovery", "type": "function", "inputs": [ { "name": "ein", "type": "uint256" }, { "name": "newAssociatedAddress", "type": "address" }, { "name": "v", "type": "uint8" }, { "name": "r", "type": "bytes32" }, { "name": "s", "type": "bytes32" }, { "name": "timestamp", "type": "uint256" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "addProvidersFor", "type": "function", "inputs": [ { "name": "ein", "type": "uint256" }, { "name": "providers", "type": "address[]" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "nextEIN", "type": "function", "inputs": [], "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "constant": true, "stateMutability": "view" }, { "name": "isAssociatedAddressFor", "type": "function", "inputs": [ { "name": "ein", "type": "uint256" }, { "name": "_address", "type": "address" } ], "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "constant": true, "stateMutability": "view" }, { "name": "addAssociatedAddressDelegated", "type": "function", "inputs": [ { "name": "approvingAddress", "type": "address" }, { "name": "addressToAdd", "type": "address" }, { "name": "v", "type": "uint8[2]" }, { "name": "r", "type": "bytes32[2]" }, { "name": "s", "type": "bytes32[2]" }, { "name": "timestamp", "type": "uint256[2]" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "maxAssociatedAddresses", "type": "function", "inputs": [], "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "constant": true, "stateMutability": "view" }, { "name": "removeResolvers", "type": "function", "inputs": [ { "name": "resolvers", "type": "address[]" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "isResolverFor", "type": "function", "inputs": [ { "name": "ein", "type": "uint256" }, { "name": "resolver", "type": "address" } ], "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "constant": true, "stateMutability": "view" }, { "name": "removeAssociatedAddressDelegated", "type": "function", "inputs": [ { "name": "addressToRemove", "type": "address" }, { "name": "v", "type": "uint8" }, { "name": "r", "type": "bytes32" }, { "name": "s", "type": "bytes32" }, { "name": "timestamp", "type": "uint256" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "addResolvers", "type": "function", "inputs": [ { "name": "resolvers", "type": "address[]" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "triggerDestruction", "type": "function", "inputs": [ { "name": "ein", "type": "uint256" }, { "name": "firstChunk", "type": "address[]" }, { "name": "lastChunk", "type": "address[]" }, { "name": "resetResolvers", "type": "bool" } ], "outputs": [], "payable": false, "constant": false, "stateMutability": "nonpayable" }, { "name": "IdentityCreated", "type": "event", "inputs": [ { "name": "initiator", "type": "address", "indexed": true }, { "name": "ein", "type": "uint256", "indexed": true }, { "name": "recoveryAddress", "type": "address", "indexed": false }, { "name": "associatedAddress", "type": "address", "indexed": false }, { "name": "providers", "type": "address[]", "indexed": false }, { "name": "resolvers", "type": "address[]", "indexed": false }, { "name": "delegated", "type": "bool", "indexed": false } ], "anonymous": false }, { "name": "AssociatedAddressAdded", "type": "event", "inputs": [ { "name": "initiator", "type": "address", "indexed": true }, { "name": "ein", "type": "uint256", "indexed": true }, { "name": "approvingAddress", "type": "address", "indexed": false }, { "name": "addedAddress", "type": "address", "indexed": false }, { "name": "delegated", "type": "bool", "indexed": false } ], "anonymous": false }, { "name": "AssociatedAddressRemoved", "type": "event", "inputs": [ { "name": "initiator", "type": "address", "indexed": true }, { "name": "ein", "type": "uint256", "indexed": true }, { "name": "removedAddress", "type": "address", "indexed": false }, { "name": "delegated", "type": "bool", "indexed": false } ], "anonymous": false }, { "name": "ProviderAdded", "type": "event", "inputs": [ { "name": "initiator", "type": "address", "indexed": true }, { "name": "ein", "type": "uint256", "indexed": true }, { "name": "provider", "type": "address", "indexed": false }, { "name": "delegated", "type": "bool", "indexed": false } ], "anonymous": false }, { "name": "ProviderRemoved", "type": "event", "inputs": [ { "name": "initiator", "type": "address", "indexed": true }, { "name": "ein", "type": "uint256", "indexed": true }, { "name": "provider", "type": "address", "indexed": false }, { "name": "delegated", "type": "bool", "indexed": false } ], "anonymous": false }, { "name": "ResolverAdded", "type": "event", "inputs": [ { "name": "initiator", "type": "address", "indexed": true }, { "name": "ein", "type": "uint256", "indexed": true }, { "name": "resolvers", "type": "address", "indexed": false }, { "name": "delegated", "type": "bool", "indexed": false } ], "anonymous": false }, { "name": "ResolverRemoved", "type": "event", "inputs": [ { "name": "initiator", "type": "address", "indexed": true }, { "name": "ein", "type": "uint256", "indexed": true }, { "name": "resolvers", "type": "address", "indexed": false }, { "name": "delegated", "type": "bool", "indexed": false } ], "anonymous": false }, { "name": "RecoveryAddressChangeTriggered", "type": "event", "inputs": [ { "name": "initiator", "type": "address", "indexed": true }, { "name": "ein", "type": "uint256", "indexed": true }, { "name": "oldRecoveryAddress", "type": "address", "indexed": false }, { "name": "newRecoveryAddress", "type": "address", "indexed": false }, { "name": "delegated", "type": "bool", "indexed": false } ], "anonymous": false }, { "name": "RecoveryTriggered", "type": "event", "inputs": [ { "name": "initiator", "type": "address", "indexed": true }, { "name": "ein", "type": "uint256", "indexed": true }, { "name": "oldAssociatedAddresses", "type": "address[]", "indexed": false }, { "name": "newAssociatedAddress", "type": "address", "indexed": false } ], "anonymous": false }, { "name": "IdentityDestroyed", "type": "event", "inputs": [ { "name": "initiator", "type": "address", "indexed": true }, { "name": "ein", "type": "uint256", "indexed": true }, { "name": "recoveryAddress", "type": "address", "indexed": false }, { "name": "resolversReset", "type": "bool", "indexed": false } ], "anonymous": false } ];

import {ansi,log} from '../helper/logHelper.js';

class IdentityRegistry {
    constructor (web3,address) {
        this.address = address;
        this.abi = IdentityRegistryABI;
        this.instance = new web3.eth.Contract(this.abi, this.address);
        log.info(`  Initialized IdentityRegistry (${ansi.magenta(address)})`);
    };
    getContractAddress(){
        return this.address;
    }
    // async getIdentity(ein) {
    //     if(!this.identituRegistryInstance || !this.identituRegistryInstance.methods.getIdentity) return 'error'
    //     return this.identituRegistryInstance.methods.getIdentity(ein).call();
    // }

    async getIdentity(ein){
        if(!this.instance || !this.instance.methods.getIdentity) return 'error';
        return this.instance.methods.getIdentity(ein).call();
    }
    
    async identityExists(ein){
        if(!this.instance || !this.instance.methods.identityExists) return 'error';
        return this.instance.methods.identityExists(ein).call();
    }
}
export default IdentityRegistry;